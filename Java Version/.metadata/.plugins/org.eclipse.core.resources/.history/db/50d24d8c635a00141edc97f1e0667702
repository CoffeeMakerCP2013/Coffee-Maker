package m4coffeemaker;

import model.CoffeeMachineStates.*;

import coffeemaker.CoffeeMakerAPI;
import coffeemaker.HotWaterSource;

public class M4HotWaterSource extends HotWaterSource implements Pollable {
	private CoffeeMakerAPI api;

	public M4HotWaterSource(CoffeeMakerAPI api) {
		this.api = api;
	}

	@Override
	public Boolean IsReady() {
		BoilerStatus boilerStatus = api.getBoilerStatus();
		return boilerStatus == BoilerStatus.NOT_EMPTY;
	}

	@Override
	public void StartBrewing() {
		api.SetReliefValveState(ReliefValveState.CLOSED);
		api.SetBoilerState(BoilerState.ON);
	}

	public void Poll() {
		BoilerStatus boilerStatus = api.getBoilerStatus();
		if (isBrewing) {
			if (boilerStatus == BoilerStatus.EMPTY) {
				api.SetBoilerState(BoilerState.OFF);
				api.SetReliefValveState(ReliefValveState.CLOSED);
				DeclareDone();
			}
		}
	}

	@Override
	public void Pause() {
		api.SetBoilerState(BoilerState.OFF);
		api.SetReliefValveState(ReliefValveState.OPEN);
	}

	@Override
	public void Resume() {
		api.SetBoilerState(BoilerState.ON);
		api.SetReliefValveState(ReliefValveState.CLOSED);
	}
}