package coffeemaker;

public abstract class ContainmentVessel {
	private UserInterface ui;
	private HotWaterSource hws;
	protected Boolean isBrewing;
	protected Boolean isComplete;

	public ContainmentVessel() {
		isBrewing = false;
		isComplete = true;
	}

	public void init(UserInterface ui, HotWaterSource hws) {
		this.ui = ui;
		this.hws = hws;
	}

	public void Start() {
		isBrewing = true;
		isComplete = false;
	}

	public void Done() {
		isBrewing = false;
	}

	protected void DeclareComplete() {
		isComplete = true;
		ui.Complete();
	}

	protected void ContainerAvailable() {
		hws.Resume();
	}

	protected void ContainerUnavailable() {
		hws.Pause();
	}

	public abstract Boolean IsReady();
}